{% extends "TobionTropaionBundle::layout.html.twig" %}

{% block title %}
	{{ athlete.fullName }}
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('bundles/tobiontropaion/css/teammatch.css') }}" />
	<link rel="stylesheet" href="{{ asset('bundles/tobiontropaion/css/jquery-ui-1.8.14.custom.css') }}" />
{% endblock %}

{% block tail_javascripts %}
    {{ parent() }}	
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js"></script>
	<script src="{{ asset('bundles/tobiontropaion/js/highcharts/js/highcharts.js') }}"></script>
	<script src="{{ asset('bundles/tobiontropaion/js/highcharts/js/modules/exporting.js') }}"></script>
	
	<script>
	//<![CDATA[

	$(document).ready(function() {

	var chart = new Highcharts.Chart({
		chart: {
			renderTo: 'rating-graph',
			zoomType: 'xy'
		},
		title: {
			text: '{% trans with { '%athlete%': athlete.fullName } %}Rating-Entwicklung von %athlete%{% endtrans %}'
		},
		credits: {
			enabled: false
		},
		xAxis: {
			type: 'datetime',
			title: {
				text: 'Zeit'
			}
		},
		yAxis: [{
			// left y axis
			title: {
				text: '{% trans %}Rating{% endtrans %}'
			},
			showFirstLabel: false,
		  }, { 
			// right y axis
			linkedTo: 0,
			opposite: true,
			title: {
				text: null
			},
			showFirstLabel: false
		}],
		legend: {
			verticalAlign: 'top',
			y: 30,
			symbolPadding: 10,
			symbolWidth: 40,
			borderWidth: 2
		},
		tooltip: {
			shared: true,
			crosshairs: true,
			formatter: function() {
				var s = '<span style="font-size: 10px">' + 
					window.Highcharts.dateFormat('%e. %B %Y', this.x) + ': ' + 
					this.points[0].point.options.teammatch + ' (' +
					this.points[0].point.options.tournament + ' | ' +
					this.points[0].point.options.league + ')' +
					'</span>';
				$.each(this.points, function(i, p) {
					s += '<br/><span style="color:' + p.series.color + '">' + 
							p.series.name +
							'</span>: <b>' + p.y + '</b> ('+ p.point.options.match + ')';
				});

				return s;
			}
		}, 
		plotOptions: {
			series: {
				step: true,
				shadow: false,
				cursor: 'pointer',
				point: {
					events: {
						click: function() {
							window.open(this.options.url,'_blank'); 
						}
					}
				}
			}
		},
		exporting: {
			buttons: {
				printButton: {
					enabled: false,
				}
			}
		},
		series: [{
			name: '{% trans %}Einzel{% endtrans %}',
			data: {{ singlesRatings | json_encode | raw }},
		}, {
			name: '{% trans %}Doppel{% endtrans %}',
			data: {{ doublesRatings | json_encode | raw }},
		}, {
			name: '{% trans %}Mixed{% endtrans %}',
			data: {{ mixedRatings | json_encode | raw }},
		}]
	});
   
	});

	//]]>
	</script>
	
{% endblock %}

{% set pageRdfId = path('profile_athlete', athlete.routingParams|merge({ '_format': 'html' }) ) ~ '.html' %}

{% block metas %}
	{{ parent() }}
	<meta property="og:type" content="athlete" />
	<meta property="og:url" content="{{ url('profile_athlete', athlete.routingParams ) }}" />
{% endblock %}

{% import "TobionTropaionBundle::macros.html.twig" as macros %}

{% block content %}

<article id="athlete-profile" about="{{ path('profile_athlete', athlete.routingParams ) }}" typeof="sport:Athlete">

<header>
	<h1>{# TODO: athlete data like familyName, givenName, gender is already marked up in each teammatch-scoresheet,
		but might be better placed here to reduce duplication #}
		{{ athlete.fullName }}
		<span style="display:none;" rel="foaf:page" resource="{{ pageRdfId }}"></span>
	</h1>

	{% if user %}{# TODO rel="me" ?! #}
		<p>Registriertes Nutzerprofil: <a href="{{ path('profile_user', user.routingParams ) }}">{{ user }}</a></p>
	{% endif %}

	<p>Aktueller Verein: <a href="{{ path('profile_club', athlete.club.routingParams ) }}">{{ athlete.club }}</a></p>
</header>

<section id="athlete-tournaments">
	<h2>{% trans %}Turniere{% endtrans %}</h2>

	<ul>
	{% for tl in tournamentLineups %}
		<li><h4><a href="{{ path('tournament_athlete', athlete.routingParams(tl.tournament) ) }}">{{ tl.tournament }}</a></h4>
			{{ macros.lineup_athlete(tl.lineups.1|default(null), tl.lineups.2|default(null), tl.lineupChanged, tl.tournament) }}
		</li>
	{% endfor %}
	</ul>
</section>

<section id="athlete-last-matches">
	<h2>{% trans %}Letzte Spiele{% endtrans %}</h2>

	<p>TODO mit Feed</p>
</section>


<section id="athlete-rating">
	<h2>{% trans %}Rating{% endtrans %}</h2>

	<details>
		<summary>{% trans %}Hilfe{% endtrans %}</summary>
		{% trans %}<p>Informationen zum Rating ... TODO
			</p>
			<p>Beim Bewegen des Cursors über den Graphen werden zusätzliche Informationen angezeigt,
			wie das jeweilige Rating und das Spielergebnis, das zu der neuen Ratingbewertung geführt hat.
			Ein Klick auf den Punkt öffnet die Webseite zum Spiel.
			</p>
			<p>Man kann in das Diagramm hineinzoomen, indem man den Bereich durch Klicken und Ziehen auswählt.
			Oben rechts befindet sich dann ein Link zum Hinauszoomen.
			</p>
			<p>Über den Button in der oberen rechten Ecke kann das Diagramm als Bild exportiert werden.
			</p>
		{% endtrans %}
	</details>

	<table>
	<thead>
		<tr>
			<th></th>
			<th>{% trans %}Aktuell{% endtrans %}</th>
			<th>{% trans %}Min{% endtrans %}</th>
			<th>{% trans %}Max{% endtrans %}</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>{% trans %}Einzel{% endtrans %}</th>
			<td>{% if athlete.singlesRating is not empty %}
				{{ athlete.singlesRating }}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.singles.minRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.singles.minRating,
					'%date%': ratingStats.singles.minAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.singles.maxRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.singles.maxRating,
					'%date%': ratingStats.singles.maxAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
		</tr>
		<tr>
			<th>{% trans %}Doppel{% endtrans %}</th>
			<td>{% if athlete.doublesRating is not empty %}
				{{ athlete.doublesRating }}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.doubles.minRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.doubles.minRating,
					'%date%': ratingStats.doubles.minAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.doubles.maxRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.doubles.maxRating,
					'%date%': ratingStats.doubles.maxAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
		</tr>
		<tr>
			<th>{% trans %}Mixed{% endtrans %}</th>
			<td>{% if athlete.mixedRating is not empty %}
				{{ athlete.mixedRating }}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.mixed.minRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.mixed.minRating,
					'%date%': ratingStats.mixed.minAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
			<td>{% if ratingStats.mixed.maxRating is not empty %}
				{% trans with {
					'%rating%': ratingStats.mixed.maxRating,
					'%date%': ratingStats.mixed.maxAt|date("d.m.Y")
				} %}%rating% am %date%{% endtrans %}
				{% else %}—{% endif %}</td>
		</tr>
	</tbody>
	</table>

	<div id="rating-graph" style="width: 95%; height: 350px;">
		<p>{% trans %}JavaScript notwendig{% endtrans %}</p>
	</div>
</section>

</article>

{% endblock %}